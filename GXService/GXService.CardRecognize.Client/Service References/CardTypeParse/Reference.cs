//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18052
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace GXService.CardRecognize.Client.CardTypeParse {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Card", Namespace="GXService.CardRecognize.Contract")]
    [System.SerializableAttribute()]
    public partial class Card : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GXService.CardRecognize.Client.CardTypeParse.CardColor ColorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GXService.CardRecognize.Client.CardTypeParse.CardNum NumField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GXService.CardRecognize.Client.CardTypeParse.CardColor Color {
            get {
                return this.ColorField;
            }
            set {
                if ((this.ColorField.Equals(value) != true)) {
                    this.ColorField = value;
                    this.RaisePropertyChanged("Color");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GXService.CardRecognize.Client.CardTypeParse.CardNum Num {
            get {
                return this.NumField;
            }
            set {
                if ((this.NumField.Equals(value) != true)) {
                    this.NumField = value;
                    this.RaisePropertyChanged("Num");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CardColor", Namespace="http://schemas.datacontract.org/2004/07/GXService.CardRecognize.Contract")]
    public enum CardColor : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        未知 = -1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        方块 = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        梅花 = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        红桃 = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        黑桃 = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CardNum", Namespace="http://schemas.datacontract.org/2004/07/GXService.CardRecognize.Contract")]
    public enum CardNum : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        未知 = -1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        _2 = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        _3 = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        _4 = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        _5 = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        _6 = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        _7 = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        _8 = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        _9 = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        _10 = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        _J = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        _Q = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        _K = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        _A = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        _Joke = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        _BigJoke = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        _Any = 17,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CardTypeResult", Namespace="GXService.CardRecognize.Contract")]
    [System.SerializableAttribute()]
    public partial class CardTypeResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GXService.CardRecognize.Client.CardTypeParse.CardType CardTypeHeadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GXService.CardRecognize.Client.CardTypeParse.CardType CardTypeMiddleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GXService.CardRecognize.Client.CardTypeParse.CardType CardTypeTailField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GXService.CardRecognize.Client.CardTypeParse.CardType CardTypeHead {
            get {
                return this.CardTypeHeadField;
            }
            set {
                if ((object.ReferenceEquals(this.CardTypeHeadField, value) != true)) {
                    this.CardTypeHeadField = value;
                    this.RaisePropertyChanged("CardTypeHead");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GXService.CardRecognize.Client.CardTypeParse.CardType CardTypeMiddle {
            get {
                return this.CardTypeMiddleField;
            }
            set {
                if ((object.ReferenceEquals(this.CardTypeMiddleField, value) != true)) {
                    this.CardTypeMiddleField = value;
                    this.RaisePropertyChanged("CardTypeMiddle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GXService.CardRecognize.Client.CardTypeParse.CardType CardTypeTail {
            get {
                return this.CardTypeTailField;
            }
            set {
                if ((object.ReferenceEquals(this.CardTypeTailField, value) != true)) {
                    this.CardTypeTailField = value;
                    this.RaisePropertyChanged("CardTypeTail");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CardType", Namespace="GXService.CardRecognize.Contract")]
    [System.SerializableAttribute()]
    public partial class CardType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CardTypeParse.ICardTypeParser", SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface ICardTypeParser {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICardTypeParser/ParseCardType", ReplyAction="http://tempuri.org/ICardTypeParser/ParseCardTypeResponse")]
        GXService.CardRecognize.Client.CardTypeParse.CardTypeResult[] ParseCardType(GXService.CardRecognize.Client.CardTypeParse.Card[] cards);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICardTypeParser/ParseCardType", ReplyAction="http://tempuri.org/ICardTypeParser/ParseCardTypeResponse")]
        System.Threading.Tasks.Task<GXService.CardRecognize.Client.CardTypeParse.CardTypeResult[]> ParseCardTypeAsync(GXService.CardRecognize.Client.CardTypeParse.Card[] cards);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICardTypeParserChannel : GXService.CardRecognize.Client.CardTypeParse.ICardTypeParser, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CardTypeParserClient : System.ServiceModel.ClientBase<GXService.CardRecognize.Client.CardTypeParse.ICardTypeParser>, GXService.CardRecognize.Client.CardTypeParse.ICardTypeParser {
        
        public CardTypeParserClient() {
        }
        
        public CardTypeParserClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CardTypeParserClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CardTypeParserClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CardTypeParserClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public GXService.CardRecognize.Client.CardTypeParse.CardTypeResult[] ParseCardType(GXService.CardRecognize.Client.CardTypeParse.Card[] cards) {
            return base.Channel.ParseCardType(cards);
        }
        
        public System.Threading.Tasks.Task<GXService.CardRecognize.Client.CardTypeParse.CardTypeResult[]> ParseCardTypeAsync(GXService.CardRecognize.Client.CardTypeParse.Card[] cards) {
            return base.Channel.ParseCardTypeAsync(cards);
        }
    }
}
