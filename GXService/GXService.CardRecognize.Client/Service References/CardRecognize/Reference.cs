//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18052
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace GXService.CardRecognize.Client.CardRecognize {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RecoginizeData", Namespace="http://schemas.datacontract.org/2004/07/GXService.CardRecognize.Contract")]
    [System.SerializableAttribute()]
    public partial class RecoginizeData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] CardsBitmapField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GXService.CardRecognize.Client.CardRecognize.GameTemplateType GameTypeTemplateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] CardsBitmap {
            get {
                return this.CardsBitmapField;
            }
            set {
                if ((object.ReferenceEquals(this.CardsBitmapField, value) != true)) {
                    this.CardsBitmapField = value;
                    this.RaisePropertyChanged("CardsBitmap");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GXService.CardRecognize.Client.CardRecognize.GameTemplateType GameTypeTemplate {
            get {
                return this.GameTypeTemplateField;
            }
            set {
                if ((this.GameTypeTemplateField.Equals(value) != true)) {
                    this.GameTypeTemplateField = value;
                    this.RaisePropertyChanged("GameTypeTemplate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GameTemplateType", Namespace="http://schemas.datacontract.org/2004/07/GXService.CardRecognize.Contract")]
    public enum GameTemplateType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        斗地主手牌 = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        十三张 = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        斗地主出牌 = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RecognizeResult", Namespace="http://schemas.datacontract.org/2004/07/GXService.CardRecognize.Contract")]
    [System.SerializableAttribute()]
    public partial class RecognizeResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GXService.CardRecognize.Client.CardRecognize.Card[] ResultField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GXService.CardRecognize.Client.CardRecognize.Card[] Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Card", Namespace="GXService.CardRecognize.Contract")]
    [System.SerializableAttribute()]
    public partial class Card : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GXService.CardRecognize.Client.CardRecognize.CardColor ColorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GXService.CardRecognize.Client.CardRecognize.CardNum NumField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GXService.CardRecognize.Client.CardRecognize.CardColor Color {
            get {
                return this.ColorField;
            }
            set {
                if ((this.ColorField.Equals(value) != true)) {
                    this.ColorField = value;
                    this.RaisePropertyChanged("Color");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GXService.CardRecognize.Client.CardRecognize.CardNum Num {
            get {
                return this.NumField;
            }
            set {
                if ((this.NumField.Equals(value) != true)) {
                    this.NumField = value;
                    this.RaisePropertyChanged("Num");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CardColor", Namespace="http://schemas.datacontract.org/2004/07/GXService.CardRecognize.Contract")]
    public enum CardColor : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        未知 = -1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        黑桃 = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        红桃 = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        梅花 = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        方块 = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CardNum", Namespace="http://schemas.datacontract.org/2004/07/GXService.CardRecognize.Contract")]
    public enum CardNum : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        未知 = -1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        _A = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        _2 = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        _3 = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        _4 = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        _5 = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        _6 = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        _7 = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        _8 = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        _9 = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        _10 = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        _J = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        _Q = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        _K = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        _Joke = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        _BigJoke = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        _Any = 15,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CardRecognize.ICardsRecognizer", SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface ICardsRecognizer {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ICardsRecognizer/Start")]
        void Start();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ICardsRecognizer/Start")]
        System.Threading.Tasks.Task StartAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICardsRecognizer/Recognize", ReplyAction="http://tempuri.org/ICardsRecognizer/RecognizeResponse")]
        GXService.CardRecognize.Client.CardRecognize.RecognizeResult Recognize(GXService.CardRecognize.Client.CardRecognize.RecoginizeData data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICardsRecognizer/Recognize", ReplyAction="http://tempuri.org/ICardsRecognizer/RecognizeResponse")]
        System.Threading.Tasks.Task<GXService.CardRecognize.Client.CardRecognize.RecognizeResult> RecognizeAsync(GXService.CardRecognize.Client.CardRecognize.RecoginizeData data);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, IsTerminating=true, IsInitiating=false, Action="http://tempuri.org/ICardsRecognizer/Stop")]
        void Stop();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, IsTerminating=true, IsInitiating=false, Action="http://tempuri.org/ICardsRecognizer/Stop")]
        System.Threading.Tasks.Task StopAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICardsRecognizerChannel : GXService.CardRecognize.Client.CardRecognize.ICardsRecognizer, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CardsRecognizerClient : System.ServiceModel.ClientBase<GXService.CardRecognize.Client.CardRecognize.ICardsRecognizer>, GXService.CardRecognize.Client.CardRecognize.ICardsRecognizer {
        
        public CardsRecognizerClient() {
        }
        
        public CardsRecognizerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CardsRecognizerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CardsRecognizerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CardsRecognizerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void Start() {
            base.Channel.Start();
        }
        
        public System.Threading.Tasks.Task StartAsync() {
            return base.Channel.StartAsync();
        }
        
        public GXService.CardRecognize.Client.CardRecognize.RecognizeResult Recognize(GXService.CardRecognize.Client.CardRecognize.RecoginizeData data) {
            return base.Channel.Recognize(data);
        }
        
        public System.Threading.Tasks.Task<GXService.CardRecognize.Client.CardRecognize.RecognizeResult> RecognizeAsync(GXService.CardRecognize.Client.CardRecognize.RecoginizeData data) {
            return base.Channel.RecognizeAsync(data);
        }
        
        public void Stop() {
            base.Channel.Stop();
        }
        
        public System.Threading.Tasks.Task StopAsync() {
            return base.Channel.StopAsync();
        }
    }
}
